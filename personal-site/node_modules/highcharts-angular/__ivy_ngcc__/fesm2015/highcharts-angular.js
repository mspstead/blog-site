import { Component, ElementRef, EventEmitter, Input, Output, NgZone, NgModule } from '@angular/core';
import 'highcharts';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class HighchartsChartComponent {
    /**
     * @param {?} el
     * @param {?} _zone
     */
    constructor(el, _zone // #75
    ) {
        this.el = el;
        this._zone = _zone;
        this.updateChange = new EventEmitter(true);
        this.chartInstance = new EventEmitter();
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set options(val) {
        this.optionsValue = val;
        this.wrappedUpdateOrCreateChart();
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set update(val) {
        if (val) {
            this.wrappedUpdateOrCreateChart();
            this.updateChange.emit(false); // clear the flag after update
        }
    }
    /**
     * @return {?}
     */
    wrappedUpdateOrCreateChart() {
        // #75
        if (this.runOutsideAngular) {
            this._zone.runOutsideAngular(() => {
                this.updateOrCreateChart();
            });
        }
        else {
            this.updateOrCreateChart();
        }
    }
    /**
     * @return {?}
     */
    updateOrCreateChart() {
        if (this.chart && this.chart.update) {
            this.chart.update(this.optionsValue, true, this.oneToOne || false);
        }
        else {
            this.chart = (/** @type {?} */ (this.Highcharts))[this.constructorType || 'chart'](this.el.nativeElement, this.optionsValue, this.callbackFunction || null);
            // emit chart instance on init
            this.chartInstance.emit(this.chart);
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        // #44
        if (this.chart) { // #56
            // #56
            this.chart.destroy();
            this.chart = null;
        }
    }
}
HighchartsChartComponent.ɵfac = function HighchartsChartComponent_Factory(t) { return new (t || HighchartsChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
HighchartsChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HighchartsChartComponent, selectors: [["highcharts-chart"]], inputs: { options: "options", update: "update", Highcharts: "Highcharts", constructorType: "constructorType", callbackFunction: "callbackFunction", oneToOne: "oneToOne", runOutsideAngular: "runOutsideAngular" }, outputs: { updateChange: "updateChange", chartInstance: "chartInstance" }, decls: 0, vars: 0, template: function HighchartsChartComponent_Template(rf, ctx) { }, encapsulation: 2 });
/** @nocollapse */
HighchartsChartComponent.ctorParameters = () => [
    { type: ElementRef, },
    { type: NgZone, },
];
HighchartsChartComponent.propDecorators = {
    "Highcharts": [{ type: Input },],
    "constructorType": [{ type: Input },],
    "callbackFunction": [{ type: Input },],
    "oneToOne": [{ type: Input },],
    "runOutsideAngular": [{ type: Input },],
    "options": [{ type: Input },],
    "update": [{ type: Input },],
    "updateChange": [{ type: Output },],
    "chartInstance": [{ type: Output },],
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighchartsChartComponent, [{
        type: Component,
        args: [{
                selector: 'highcharts-chart',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { updateChange: [{
            type: Output
        }], chartInstance: [{
            type: Output
        }], options: [{
            type: Input
        }], update: [{
            type: Input
        }], Highcharts: [{
            type: Input
        }], constructorType: [{
            type: Input
        }], callbackFunction: [{
            type: Input
        }], oneToOne: [{
            type: Input
        }], runOutsideAngular: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class HighchartsChartModule {
}
HighchartsChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HighchartsChartModule });
HighchartsChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HighchartsChartModule_Factory(t) { return new (t || HighchartsChartModule)(); } });
/** @nocollapse */
HighchartsChartModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HighchartsChartModule, { declarations: [HighchartsChartComponent], exports: [HighchartsChartComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighchartsChartModule, [{
        type: NgModule,
        args: [{
                declarations: [HighchartsChartComponent],
                exports: [HighchartsChartComponent]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { HighchartsChartModule, HighchartsChartComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWtlL0RvY3VtZW50cy9XZWJzaXRlL3BlcnNvbmFsLXNpdGUvbm9kZV9tb2R1bGVzL2hpZ2hjaGFydHMtYW5ndWxhci9mZXNtMjAxNS9oaWdoY2hhcnRzLWFuZ3VsYXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvRUMsc2dCQU1DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFnQkE7Ozs7Ozs7OztDQU9ELDJKQU1DOzs7Ozs7Ozs7OzBCQUU4QyIsImZpbGUiOiJoaWdoY2hhcnRzLWFuZ3VsYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgTmdab25lLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICdoaWdoY2hhcnRzJztcblxuLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxyXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXHJcbiAqL1xyXG5jbGFzcyBIaWdoY2hhcnRzQ2hhcnRDb21wb25lbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0gez99IGVsXHJcbiAgICAgKiBAcGFyYW0gez99IF96b25lXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGVsLCBfem9uZSAvLyAjNzVcclxuICAgICkge1xyXG4gICAgICAgIHRoaXMuZWwgPSBlbDtcclxuICAgICAgICB0aGlzLl96b25lID0gX3pvbmU7XHJcbiAgICAgICAgdGhpcy51cGRhdGVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKHRydWUpO1xyXG4gICAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHs/fSB2YWxcclxuICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgKi9cclxuICAgIHNldCBvcHRpb25zKHZhbCkge1xyXG4gICAgICAgIHRoaXMub3B0aW9uc1ZhbHVlID0gdmFsO1xyXG4gICAgICAgIHRoaXMud3JhcHBlZFVwZGF0ZU9yQ3JlYXRlQ2hhcnQoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHs/fSB2YWxcclxuICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgKi9cclxuICAgIHNldCB1cGRhdGUodmFsKSB7XHJcbiAgICAgICAgaWYgKHZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLndyYXBwZWRVcGRhdGVPckNyZWF0ZUNoYXJ0KCk7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQ2hhbmdlLmVtaXQoZmFsc2UpOyAvLyBjbGVhciB0aGUgZmxhZyBhZnRlciB1cGRhdGVcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgKi9cclxuICAgIHdyYXBwZWRVcGRhdGVPckNyZWF0ZUNoYXJ0KCkge1xyXG4gICAgICAgIC8vICM3NVxyXG4gICAgICAgIGlmICh0aGlzLnJ1bk91dHNpZGVBbmd1bGFyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVPckNyZWF0ZUNoYXJ0KCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVPckNyZWF0ZUNoYXJ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcmV0dXJuIHs/fVxyXG4gICAgICovXHJcbiAgICB1cGRhdGVPckNyZWF0ZUNoYXJ0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmNoYXJ0ICYmIHRoaXMuY2hhcnQudXBkYXRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcnQudXBkYXRlKHRoaXMub3B0aW9uc1ZhbHVlLCB0cnVlLCB0aGlzLm9uZVRvT25lIHx8IGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcnQgPSAoLyoqIEB0eXBlIHs/fSAqLyAodGhpcy5IaWdoY2hhcnRzKSlbdGhpcy5jb25zdHJ1Y3RvclR5cGUgfHwgJ2NoYXJ0J10odGhpcy5lbC5uYXRpdmVFbGVtZW50LCB0aGlzLm9wdGlvbnNWYWx1ZSwgdGhpcy5jYWxsYmFja0Z1bmN0aW9uIHx8IG51bGwpO1xyXG4gICAgICAgICAgICAvLyBlbWl0IGNoYXJ0IGluc3RhbmNlIG9uIGluaXRcclxuICAgICAgICAgICAgdGhpcy5jaGFydEluc3RhbmNlLmVtaXQodGhpcy5jaGFydCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcmV0dXJuIHs/fVxyXG4gICAgICovXHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgICAgICAvLyAjNDRcclxuICAgICAgICBpZiAodGhpcy5jaGFydCkgeyAvLyAjNTZcclxuICAgICAgICAgICAgLy8gIzU2XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcnQuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB0aGlzLmNoYXJ0ID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuSGlnaGNoYXJ0c0NoYXJ0Q29tcG9uZW50LmRlY29yYXRvcnMgPSBbXHJcbiAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcclxuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnaGlnaGNoYXJ0cy1jaGFydCcsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogJydcclxuICAgICAgICAgICAgfV0gfVxyXG5dO1xyXG4vKiogQG5vY29sbGFwc2UgKi9cclxuSGlnaGNoYXJ0c0NoYXJ0Q29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xyXG4gICAgeyB0eXBlOiBFbGVtZW50UmVmLCB9LFxyXG4gICAgeyB0eXBlOiBOZ1pvbmUsIH0sXHJcbl07XHJcbkhpZ2hjaGFydHNDaGFydENvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcclxuICAgIFwiSGlnaGNoYXJ0c1wiOiBbeyB0eXBlOiBJbnB1dCB9LF0sXHJcbiAgICBcImNvbnN0cnVjdG9yVHlwZVwiOiBbeyB0eXBlOiBJbnB1dCB9LF0sXHJcbiAgICBcImNhbGxiYWNrRnVuY3Rpb25cIjogW3sgdHlwZTogSW5wdXQgfSxdLFxyXG4gICAgXCJvbmVUb09uZVwiOiBbeyB0eXBlOiBJbnB1dCB9LF0sXHJcbiAgICBcInJ1bk91dHNpZGVBbmd1bGFyXCI6IFt7IHR5cGU6IElucHV0IH0sXSxcclxuICAgIFwib3B0aW9uc1wiOiBbeyB0eXBlOiBJbnB1dCB9LF0sXHJcbiAgICBcInVwZGF0ZVwiOiBbeyB0eXBlOiBJbnB1dCB9LF0sXHJcbiAgICBcInVwZGF0ZUNoYW5nZVwiOiBbeyB0eXBlOiBPdXRwdXQgfSxdLFxyXG4gICAgXCJjaGFydEluc3RhbmNlXCI6IFt7IHR5cGU6IE91dHB1dCB9LF0sXHJcbn07XG5cbi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcclxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuY2xhc3MgSGlnaGNoYXJ0c0NoYXJ0TW9kdWxlIHtcclxufVxyXG5IaWdoY2hhcnRzQ2hhcnRNb2R1bGUuZGVjb3JhdG9ycyA9IFtcclxuICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XHJcbiAgICAgICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtIaWdoY2hhcnRzQ2hhcnRDb21wb25lbnRdLFxyXG4gICAgICAgICAgICAgICAgZXhwb3J0czogW0hpZ2hjaGFydHNDaGFydENvbXBvbmVudF1cclxuICAgICAgICAgICAgfSxdIH1cclxuXTtcclxuLyoqIEBub2NvbGxhcHNlICovXHJcbkhpZ2hjaGFydHNDaGFydE1vZHVsZS5jdG9yUGFyYW1ldGVycyA9ICgpID0+IFtdO1xuXG4vKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcclxuICovXG5cbi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcclxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cblxuZXhwb3J0IHsgSGlnaGNoYXJ0c0NoYXJ0TW9kdWxlLCBIaWdoY2hhcnRzQ2hhcnRDb21wb25lbnQgfTtcbiJdfQ==